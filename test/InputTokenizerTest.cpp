#include <catch2/catch.hpp>
#include "InputTokenizer.h"
#include "PatternTokenizer.h"

// TODO make better
TEST_CASE("Test input tokenization") {
  auto pattern =
      PatternTokenizer::tokenize("name1 [--opt <string>] [name2 ...]");
  InputTokens tokens;
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "a"));
  REQUIRE(tokens.size() == 1);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "a b"));
  REQUIRE(tokens.size() == 2);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 1);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE_NOTHROW(tokens =
                      InputTokenizer::tokenize(pattern, "a b --opt \"test\""));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 1);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "\"test\"");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "a b --opt test"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "test");

  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "a b --opt 2"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "a b --opt 2.0"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2.0");
  REQUIRE_NOTHROW(tokens =
                      InputTokenizer::tokenize(pattern, "a --opt 2.0 b c"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2.0");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 2);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE(tokens.at("name2")[1] == "c");
  REQUIRE_NOTHROW(tokens =
                      InputTokenizer::tokenize(pattern, "a b --opt 2.0  c"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2.0");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 2);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE(tokens.at("name2")[1] == "c");
  REQUIRE_NOTHROW(tokens =
                      InputTokenizer::tokenize(pattern, "a b c --opt 2.0 "));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2.0");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 2);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE(tokens.at("name2")[1] == "c");
  REQUIRE_NOTHROW(tokens =
                      InputTokenizer::tokenize(pattern, "--opt 2.0 a b c"));
  REQUIRE(tokens.size() == 3);
  REQUIRE(tokens.contains("name1"));
  REQUIRE(tokens.at("name1").size() == 1);
  REQUIRE(tokens.at("name1")[0] == "a");
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "2.0");
  REQUIRE(tokens.contains("name2"));
  REQUIRE(tokens.at("name2").size() == 2);
  REQUIRE(tokens.at("name2")[0] == "b");
  REQUIRE(tokens.at("name2")[1] == "c");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt 2.0"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, ""));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "a --aaa"));

  pattern = PatternTokenizer::tokenize("[--opt <int>]");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, ""));
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt +1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "+1");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt -1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "-1");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt 1.0"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt a"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt "));
  pattern = PatternTokenizer::tokenize("[--opt <+int>]");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt -1"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt 1.0"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt a"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt "));

  pattern = PatternTokenizer::tokenize("[--opt <real>]");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, ""));
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt +1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "+1");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt -1"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "-1");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1.0"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1.0");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt -1.0"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "-1.0");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt a"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt "));
  pattern = PatternTokenizer::tokenize("[--opt <+real>]");
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1.0"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1.0");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt -1"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt -1.0"));
  REQUIRE_NOTHROW(tokens = InputTokenizer::tokenize(pattern, "--opt 1.0"));
  REQUIRE(tokens.contains("--opt"));
  REQUIRE(tokens.at("--opt").size() == 1);
  REQUIRE(tokens.at("--opt")[0] == "1.0");
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt a"));
  REQUIRE_THROWS(InputTokenizer::tokenize(pattern, "--opt "));
}